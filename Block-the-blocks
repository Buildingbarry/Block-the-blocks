<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Dodge Game</title>
  <style>
    body {
      margin: 0;
      overflow: hidden;
      background-color: #111;
      font-family: Arial, sans-serif;
      color: white;
      text-align: center;
    }

    #game {
      position: relative;
      width: 100vw;
      height: 100vh;
      background-color: #222;
    }

    #player {
      position: absolute;
      bottom: 20px;
      left: 50%;
      width: 50px;
      height: 50px;
      background-color: #00f;
      transform: translateX(-50%);
    }

    .obstacle {
      position: absolute;
      top: 0;
      width: 40px;
      height: 40px;
      background-color: red;
      animation: fall linear;
    }

    @keyframes fall {
      to {
        transform: translateY(100vh);
      }
    }

    #score {
      position: absolute;
      top: 10px;
      left: 10px;
      font-size: 1.2rem;
    }

    #game-over {
      display: none;
      font-size: 3rem;
      margin-top: 30vh;
      color: red;
    }
  </style>
</head>
<body>
  <div id="game">
    <div id="player"></div>
    <div id="score">Score: 0</div>
    <div id="game-over">Game Over!</div>
  </div>

  <script>
    const game = document.getElementById('game');
    const player = document.getElementById('player');
    const scoreEl = document.getElementById('score');
    const gameOverEl = document.getElementById('game-over');

    let score = 0;
    let gameRunning = true;

    // Move player
    document.addEventListener('keydown', (e) => {
      const left = player.offsetLeft;
      const speed = 20;
      if (e.key === 'ArrowLeft' && left > 0) {
        player.style.left = `${left - speed}px`;
      } else if (e.key === 'ArrowRight' && left < window.innerWidth - player.offsetWidth) {
        player.style.left = `${left + speed}px`;
      }
    });

    // Create obstacles
    function createObstacle() {
      if (!gameRunning) return;

      const obstacle = document.createElement('div');
      obstacle.classList.add('obstacle');
      const left = Math.floor(Math.random() * (window.innerWidth - 40));
      obstacle.style.left = `${left}px`;
      const duration = 3000 - Math.min(score * 10, 2500);
      obstacle.style.animationDuration = `${duration}ms`;

      game.appendChild(obstacle);

      // Remove obstacle when done falling
      obstacle.addEventListener('animationend', () => {
        if (gameRunning) {
          obstacle.remove();
        }
      });

      // Collision check
      const fallInterval = setInterval(() => {
        const obsRect = obstacle.getBoundingClientRect();
        const playerRect = player.getBoundingClientRect();
        if (
          obsRect.bottom >= playerRect.top &&
          obsRect.left < playerRect.right &&
          obsRect.right > playerRect.left
        ) {
          endGame();
          clearInterval(fallInterval);
        }
      }, 30);

      setTimeout(createObstacle, Math.max(600, 1000 - score * 10));
    }

    // Score loop
    function updateScore() {
      if (!gameRunning) return;
      score++;
      scoreEl.innerText = `Score: ${score}`;
      setTimeout(updateScore, 500);
    }

    function endGame() {
      gameRunning = false;
      gameOverEl.style.display = 'block';
    }

    // Start game
    createObstacle();
    updateScore();
  </script>
</body>
</html>
